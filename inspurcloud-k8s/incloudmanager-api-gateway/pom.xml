<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>com.inspur.incoudmanager</groupId>
    <artifactId>incloudmanager-api-gateway</artifactId>
    <packaging>jar</packaging>
    <name>incloudmanager-api-gateway</name>
	<version>6.0-1-1.0-0-0-SNAPSHOT</version>

    <parent>
		<groupId>com.inspur.incloudmanager</groupId>
		<artifactId>incloudmanager-parent-k8s</artifactId>
		<version>6.0-1-SNAPSHOT</version>
		<relativePath>../incloudmanager-parent/pom.xml</relativePath>
	</parent>
	

    <dependencies>
	    <dependency>
			<groupId>com.inspur.incloudmanager</groupId>
			<artifactId>incloudmanager-shell</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zuul</artifactId>
	    </dependency>
<!--		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
	    </dependency> -->
<!-- 		<dependency> -->
<!--             <groupId>org.springframework.cloud</groupId> -->
<!--             <artifactId>spring-cloud-starter-eureka</artifactId> -->
<!--         </dependency> -->
		
		<!-- 健康监控 -->
        <!-- <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-netflix-sidecar</artifactId>
        </dependency> -->
		
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
       <!--  <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-sleuth-zipkin</artifactId>
        </dependency> -->
		<!-- 健康监控  -->
    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
              
            </plugin>
            <!-- -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <property name="dist">target/zip</property>
                                <property name="dist-tmp">target/zip/tmp</property>
                                <property name="app-name">${project.artifactId}-${project.version}</property>
                                <mkdir dir="${dist-tmp}" />
                                <copy file="target/${app-name}.jar" tofile="${dist}/${app-name}.jar" />

                                <unzip src="target/lib/incloudmanager-shell-${incloudmanager-shell.version}.jar" dest="${dist-tmp}" />
								<move todir="${dist}/bin">
                                    <fileset dir="${dist-tmp}/META-INF/assembly/bin" includes="**/*" />
                                </move>
								<delete dir="${dist-tmp}" />
								<copy todir="${dist}/config">
                                    <fileset dir="target/classes">
                                        <include name="**/*.properties" />
                                        <include name="**/*.xml" />
                                        <include name="**/*.yml" />
                                    </fileset>
                                </copy>
								<zip destfile="target/${app-name}.zip">
                                    <zipfileset dir="${dist}/" />
                                    
                                </zip>
								<delete dir="${dist}" />
                                
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>
                <configuration>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                     <resources>
                        <resource>
                           <targetPath>/</targetPath>
                           <directory>${project.build.directory}</directory>
                           <include>${project.build.finalName}.jar</include>
                         </resource>
                     </resources>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>
